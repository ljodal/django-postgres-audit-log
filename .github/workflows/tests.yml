name: Tests

on: [push]

jobs:
  run:
    services:
      postgres:
        image: postgres:12-alpine
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_DB: audit_log
          POSTGRES_USER: audit_log
          POSTGRES_PASSWORD: audit_log

    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Set up poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Create venv
        run: |
          python -m venv .venv
          echo "VIRTUAL_ENV=./.venv" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
            poetry export --dev --format=requirements.txt -o requirements.txt
            pip install -r requirements.txt
      - name: Run tests without migrations
        run: python -m pytest --no-migrations
        env:
          POSTGRES_DB: audit_log
          POSTGRES_USER: audit_log
          POSTGRES_PASSWORD: audit_log
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          DJANGO_SETTINGS_MODULE: tests.settings
      - name: Run tests with migrations
        run: python -m pytest --migrations
        env:
          POSTGRES_DB: audit_log
          POSTGRES_USER: audit_log
          POSTGRES_PASSWORD: audit_log
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          DJANGO_SETTINGS_MODULE: tests.settings
